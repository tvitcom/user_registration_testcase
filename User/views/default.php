<?php include(WEB_DIR . '/app/templates/headers.php'); ?>
<style>
    .jumbotron {
        background-color: rgba(246, 176, 125, 0.16);
    }
    .jumbotron p {
        color: #DD9586;
    }
    .btn .badge {
        position: relative;
        top: 24px;
    }
    .btn-success .badge {
        color: #5294B9;
        background-color: #FFCE69;
    }
</style>
<meta name="description" content="">
<meta name="author" content="">
<title>Whatever this !</title>
</head>

<body>

    <div class="container">

        <?php include(WEB_DIR . '/app/templates/mainmenu.php'); ?>

        <div class = "jumbotron">
            <h2>Join to our <?php echo Config::$item['company']['name']; ?> now!</h2>
            <p class = "lead">
                Today for Your registration small example:  <?php echo Crypt::test(); ?>Our site use OpenSSL cryptography!
            </p>
            <p><a class="btn btn-lg btn-success"
                  href="<?php echo Config::$item['site_uri']; ?>user/registration"
                  role="button">Sign up today! <span class="badge"><?php echo $item['quantity']; ?></span></a></p>
        </div>

        <div class="row marketing">
            <div class="col-lg-12">
                <h4>Тестовое задание</h4>

                2го отборочного тура конкурса на должность:

                <ul><b>PHP developer (Middle)</b></ul>

                <p>Тестовое задание
                    составлено таким образом, чтобы проверить Ваш
                    опыт и навыки при решении задач, типичных для данной вакансии, а также
                    получить первое впечатление о ходе Ваших мыслей при решении
                    нестандартных задач. При разработке тестового приложения постарайтесь
                    реализовать как можно больше перечисленных требований. Если Вы не
                    знаете, как выполнить определенное требование, укажите, каких именно
                    знаний Вам для решения не хватает. Не переживайте, если Вы не можете
                    выполнить некоторые требования — учитывается не только количество
                    выполненных требований, но и качество их выполнения. Сконцентрируйтесь
                    на наилучшем выполнении того, что Вы знаете. Недостающие знания Вы
                    сможете получить в процессе работы. Уделяйте также внимание стилю
                    написания Вашего кода — он также будет учитываться при проверке
                    Создать средствами PHP, MySQL, JavaScript форму входа и регистрации
                    нового пользователя. При этом учитывать следующие требования к
                    разрабатываемому программному продукту:</p>
                <p></p>
                <ol>
                    <li>
                        Формы входа и регистрации должны быть понятны удобны в
                        использовании (юзабельны) для конечного пользователя, и содержать
                        необходимые подсказки по их заполнению.
                    </li>
                    <li>
                        Интерфейс должен быть мультиязычным (Рус/Eng). Функционирование
                        различных языковых версий должно быть идентичным.
                    </li>
                    <li>
                        Верификация/валидация полей должна выполняться как средствами
                        клиента, так и средствами сервера.
                    </li>
                    <li>
                        Логическое оформление БД, оптимизация полей (индексация и т.п.).
                    </li>
                    <li>
                        Возможность загружать аватар при регистрации. Большие изображения
                        масштабировать, чтобы максимальный размер изображения не
                        превышал 400px. Изображение хранится в виде файла на диске.
                    </li>
                    <li>
                        Исходный программный код должен быть аккуратно оформлен и
                        читабелен: использование табуляции, именование структур данных,
                    </li>
                    <li>
                        В серверной части, по возможности, не используйте фреймворки.
                        Использование фреймворков в клиентской части допускается.
                        Допускается использование шаблонизаторов.
                    </li>
                    <li>
                        Максимально перенесите возможный функционал на клиентскую часть
                        (ajax-запросы, фреймы). Минимизируйте число случаев полной
                        перезагрузки страницы в пользу асинхронного обновления отдельных сегментов странички
                    </li>
                    <li>
                        После регистрации присылать пользователю на E-mail запрос на
                        подтверждение регистрации по ссылке. Корректно обрабатывать
                    </li>
                    <li>
                        После входа, отобразить профиль пользователя с его данными.
                        Предусмотреть функционал для полного удаления своего аккаунта
                        зарегистрированным пользователем.
                    </li>
                    <li>
                        Реализовать анонимность данных в БД. Шифровка и расшифровка
                        полей. Данные должны быть защищены от несанкционированного
                        использования (например, с использованием схемы AES, с ключом,
                        либо парой ключей) — на случай хищения базы данных нарушителем.
                        Перечислить, к каким видам атак разработанное приложения является
                        стойким, а к каким остается уязвимым. Предложить пути повышения
                        безопасности приложения за счет дополнительных средств
                        (специфические настройки сервера, введение ограничений в протоколе
                        обмена данными, и т. д.).
                    </li>
                    <li>
                        Интегрировать систему защиты от несанкционированного копирования
                        разработанного серверного скрипта (привязка скрипта к ключу,
                        привязка скрипта к домену, запуск только одной копии скрипта на
                        одном домене). Дополнительные инструменты разместить подпапке
                        /security Вашей рабочей папки, отдельной таблице БД.
                    </li>
                </ol>
                <p>
                <ol>
                    <li>
                        Разработку выполняйте на нашем тестовом сервере в выделенной Вам
                        папке. Данные для доступа содержатся в тексте сопроводительного

                    </li>
                    <li>
                        Все необходимые комментарии оформляйте в один файл answers.doc,
                        который по окончанию работы направляйте по адресу staff@off.net
                    </li>
                    <li>
                        Получение нами от Вас файла answers.doc свидетельствует о
                    </li>
                    <li>
                        Дополнительные баллы начисляются за наличе в файле answers.doc
                        пошагового руководства пользователя.
                    </li>
                </ol>
                </p>
            </div>
        </div>

        <?php include(WEB_DIR . '/app/templates/footer.php'); ?>
